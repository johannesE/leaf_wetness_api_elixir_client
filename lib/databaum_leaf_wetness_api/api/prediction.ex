# NOTE: This file is auto generated by OpenAPI Generator 6.1.1-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DatabaumLeafWetnessAPI.Api.Prediction do
  @moduledoc """
  API calls for all endpoints tagged `Prediction`.
  """

  alias DatabaumLeafWetnessAPI.Connection
  import DatabaumLeafWetnessAPI.RequestBuilder

  @doc """
  Predict

  ### Parameters

  - `connection` (DatabaumLeafWetnessAPI.Connection): Connection to server
  - `leaf_wetness_prediction_request` (LeafWetnessPredictionRequest): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec predict_api_v1_prediction_post(Tesla.Env.client, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionRequest.t, keyword()) :: {:ok, DatabaumLeafWetnessAPI.Model.HttpValidationError.t} | {:ok, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse.t} | {:error, Tesla.Env.t}
  def predict_api_v1_prediction_post(connection, leaf_wetness_prediction_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/api/v1/prediction")
      |> add_param(:body, :body, leaf_wetness_prediction_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse{}},
      {422, %DatabaumLeafWetnessAPI.Model.HttpValidationError{}}
    ])
  end
end
