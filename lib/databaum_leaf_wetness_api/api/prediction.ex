# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule DatabaumLeafWetnessAPI.Api.Prediction do
  @moduledoc """
  API calls for all endpoints tagged `Prediction`.
  """

  alias DatabaumLeafWetnessAPI.Connection
  import DatabaumLeafWetnessAPI.RequestBuilder


  @doc """
  Predict

  ## Parameters

  - connection (DatabaumLeafWetnessAPI.Connection): Connection to server
  - leaf_wetness_prediction_request (LeafWetnessPredictionRequest): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec predict_api_v1_prediction_post(Tesla.Env.client, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionRequest.t, keyword()) :: {:ok, DatabaumLeafWetnessAPI.Model.HttpValidationError.t} | {:ok, DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse.t} | {:error, Tesla.Env.t}
  def predict_api_v1_prediction_post(connection, leaf_wetness_prediction_request, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/api/v1/prediction")
    |> add_param(:body, :body, leaf_wetness_prediction_request)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %DatabaumLeafWetnessAPI.Model.LeafWetnessPredictionResponse{}},
      { 422, %DatabaumLeafWetnessAPI.Model.HttpValidationError{}}
    ])
  end
end
